/*
 * Copyright (C) 2013, 2014 beamproject.org
 *
 * This file is part of beam-client.
 *
 * beam-client is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * beam-client is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.beamproject.client.ui;

import java.awt.Dimension;
import java.awt.Toolkit;
import static org.beamproject.client.App.getConfig;
import static org.beamproject.client.App.getController;
import static org.beamproject.client.App.getModel;
import org.beamproject.common.User;
import org.beamproject.common.util.Exceptions;

/**
 *
 * @author René Bernhardsgrütter <rene.bernhardsgruetter@posteo.ch>
 */
public class MainWindow extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    final String DEFAULT_USERNAME = "Beamer";
    final String STATUS_BUTTON_OFFLINE_LABEL = "Offline";
    final String STATUS_BUTTON_ONLINE_LABEL = "Online";
    private final int DOUBLE_CLICK_NUMBER = 2;
    final static int MINIMAL_WINDOW_WIDTH_IN_PX = 270;
    final static int MINIMAL_WINDOW_HEIGHT_IN_PX = 500;
    final static int WINDOW_TO_SCREEN_SIDE_MARGIN_IN_PX = 10;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        setSize();
        setPosition();
        setUsername();
        initalizeContactList();
    }

    void setUsername() {
        String usernmae = getConfig().username();
        usernameButton.setText(usernmae != null ? usernmae : DEFAULT_USERNAME);
    }

    private void setSize() {
        int width = getConfig().windowWidth();
        int height = getConfig().windowHeight();

        if (width > 0 && height > 0) {
            if (width >= MINIMAL_WINDOW_WIDTH_IN_PX && height >= MINIMAL_WINDOW_HEIGHT_IN_PX) {
                setSize(width, height);
                revalidate();
                repaint();
            }
        }
    }

    public void setPosition() {
        int xPosition = getConfig().windowPositionX();
        int yPosition = getConfig().windowPositionY();

        if (xPosition >= 0 && yPosition >= 0) {
            setLocation(xPosition, yPosition);
        } else {
            setWindowToLowerRightCorner();
        }
    }

    private void setWindowToLowerRightCorner() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int xPostion = screenSize.width - getWidth() - WINDOW_TO_SCREEN_SIDE_MARGIN_IN_PX;
        int yPostion = screenSize.height - getHeight() - WINDOW_TO_SCREEN_SIDE_MARGIN_IN_PX;

        setLocation(xPostion, yPostion);
    }

    @SuppressWarnings("unchecked")
    private void initalizeContactList() {
        contactList.setModel(getModel().getContactList());
    }

    public void setUsername(String username) {
        Exceptions.verifyArgumentsNotEmpty(username);
        username = username.trim();
        Exceptions.verifyArgumentsNotEmpty(username);

        usernameButton.setText(username);
    }

    public void labelStatusButtonAsConnected(boolean isOnline) {
        statusButton.setText(isOnline ? STATUS_BUTTON_ONLINE_LABEL : STATUS_BUTTON_OFFLINE_LABEL);
    }

    public void disableStatusButton() {
        statusButton.setEnabled(false);
        statusButton.setContentAreaFilled(false);
    }

    public void enableStatusButton() {
        statusButton.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        avatarButton = new javax.swing.JButton();
        usernameButton = new javax.swing.JButton();
        statusButton = new javax.swing.JButton();
        topPanelHorizontalFiller = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        addUserButton = new javax.swing.JButton();
        infoButton = new javax.swing.JButton();
        settingsButton = new javax.swing.JButton();
        contactListScrollPane = new javax.swing.JScrollPane();
        contactList = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Beam");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(270, 500));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                formComponentMoved(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        topPanel.setLayout(new javax.swing.BoxLayout(topPanel, javax.swing.BoxLayout.LINE_AXIS));

        avatarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/beamproject/client/ui/avatar.png"))); // NOI18N
        avatarButton.setContentAreaFilled(false);
        avatarButton.setFocusPainted(false);
        avatarButton.setMargin(new java.awt.Insets(1, 1, 1, 1));
        avatarButton.setMaximumSize(new java.awt.Dimension(30, 30));
        avatarButton.setMinimumSize(new java.awt.Dimension(30, 30));
        avatarButton.setPreferredSize(new java.awt.Dimension(30, 30));
        avatarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                avatarButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                avatarButtonMouseEntered(evt);
            }
        });
        avatarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avatarButtonActionPerformed(evt);
            }
        });
        topPanel.add(avatarButton);

        usernameButton.setFont(usernameButton.getFont().deriveFont(usernameButton.getFont().getStyle() | java.awt.Font.BOLD, usernameButton.getFont().getSize()-1));
        usernameButton.setText("Your Name");
        usernameButton.setContentAreaFilled(false);
        usernameButton.setFocusPainted(false);
        usernameButton.setMargin(new java.awt.Insets(1, 1, 1, 1));
        usernameButton.setMaximumSize(new java.awt.Dimension(200, 30));
        usernameButton.setMinimumSize(new java.awt.Dimension(50, 30));
        usernameButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                usernameButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                usernameButtonMouseExited(evt);
            }
        });
        usernameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameButtonActionPerformed(evt);
            }
        });
        topPanel.add(usernameButton);

        statusButton.setFont(statusButton.getFont().deriveFont((statusButton.getFont().getStyle() | java.awt.Font.ITALIC), statusButton.getFont().getSize()-1));
        statusButton.setText("Offline");
        statusButton.setContentAreaFilled(false);
        statusButton.setFocusPainted(false);
        statusButton.setMargin(new java.awt.Insets(1, 1, 1, 1));
        statusButton.setMaximumSize(new java.awt.Dimension(48, 30));
        statusButton.setMinimumSize(new java.awt.Dimension(48, 30));
        statusButton.setPreferredSize(new java.awt.Dimension(48, 30));
        statusButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                statusButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                statusButtonMouseExited(evt);
            }
        });
        statusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusButtonActionPerformed(evt);
            }
        });
        topPanel.add(statusButton);
        topPanel.add(topPanelHorizontalFiller);

        addUserButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/beamproject/client/ui/addContact.png"))); // NOI18N
        addUserButton.setContentAreaFilled(false);
        addUserButton.setFocusPainted(false);
        addUserButton.setMargin(new java.awt.Insets(1, 1, 1, 1));
        addUserButton.setMaximumSize(new java.awt.Dimension(30, 30));
        addUserButton.setMinimumSize(new java.awt.Dimension(30, 30));
        addUserButton.setPreferredSize(new java.awt.Dimension(30, 30));
        addUserButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addUserButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addUserButtonMouseEntered(evt);
            }
        });
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });
        topPanel.add(addUserButton);

        infoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/beamproject/client/ui/infoButton.png"))); // NOI18N
        infoButton.setContentAreaFilled(false);
        infoButton.setFocusPainted(false);
        infoButton.setMargin(new java.awt.Insets(1, 1, 1, 1));
        infoButton.setMaximumSize(new java.awt.Dimension(30, 30));
        infoButton.setMinimumSize(new java.awt.Dimension(30, 30));
        infoButton.setPreferredSize(new java.awt.Dimension(30, 30));
        infoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                infoButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                infoButtonMouseEntered(evt);
            }
        });
        infoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoButtonActionPerformed(evt);
            }
        });
        topPanel.add(infoButton);

        settingsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/beamproject/client/ui/menu.png"))); // NOI18N
        settingsButton.setContentAreaFilled(false);
        settingsButton.setFocusPainted(false);
        settingsButton.setMargin(new java.awt.Insets(1, 1, 1, 1));
        settingsButton.setMaximumSize(new java.awt.Dimension(30, 30));
        settingsButton.setMinimumSize(new java.awt.Dimension(30, 30));
        settingsButton.setPreferredSize(new java.awt.Dimension(30, 30));
        settingsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                settingsButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                settingsButtonMouseEntered(evt);
            }
        });
        settingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButtonActionPerformed(evt);
            }
        });
        topPanel.add(settingsButton);

        getContentPane().add(topPanel);

        contactList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        contactList.setMaximumSize(new java.awt.Dimension(999999999, 99999999));
        contactList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contactListMouseClicked(evt);
            }
        });
        contactListScrollPane.setViewportView(contactList);

        getContentPane().add(contactListScrollPane);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void settingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButtonActionPerformed
        getController().showSettingsWindow();
    }//GEN-LAST:event_settingsButtonActionPerformed

    private void avatarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avatarButtonActionPerformed

    }//GEN-LAST:event_avatarButtonActionPerformed

    private void formComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentMoved
        int xPosition = evt.getComponent().getX();
        int yPosition = evt.getComponent().getY();

        getConfig().setProperty("windowPositionX", "" + xPosition);
        getConfig().setProperty("windowPositionY", "" + yPosition);
        getController().storeConfig();
    }//GEN-LAST:event_formComponentMoved

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed
        AddContactDialog dialog = new AddContactDialog();
        Frames.setIcons(dialog);
        dialog.setVisible(true);
    }//GEN-LAST:event_addUserButtonActionPerformed

    private void contactListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contactListMouseClicked
        if (evt.getClickCount() == DOUBLE_CLICK_NUMBER) {
            User selectedContect = (User) contactList.getSelectedValue();
            getController().openConversationWindow(selectedContect);
        }
    }//GEN-LAST:event_contactListMouseClicked

    private void usernameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameButtonActionPerformed
        getController().showNameInSettingsWindow();
    }//GEN-LAST:event_usernameButtonActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        int width = evt.getComponent().getWidth();
        int height = evt.getComponent().getHeight();

        getConfig().setProperty("windowWidth", "" + width);
        getConfig().setProperty("windowHeight", "" + height);
        getController().storeConfig();
    }//GEN-LAST:event_formComponentResized

    private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoButtonActionPerformed
        getController().showInfoWindow();
    }//GEN-LAST:event_infoButtonActionPerformed

    private void avatarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_avatarButtonMouseEntered
        avatarButton.setContentAreaFilled(true);
    }//GEN-LAST:event_avatarButtonMouseEntered

    private void avatarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_avatarButtonMouseExited
        avatarButton.setContentAreaFilled(false);
    }//GEN-LAST:event_avatarButtonMouseExited

    private void usernameButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameButtonMouseEntered
        usernameButton.setContentAreaFilled(true);
    }//GEN-LAST:event_usernameButtonMouseEntered

    private void usernameButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameButtonMouseExited
        usernameButton.setContentAreaFilled(false);
    }//GEN-LAST:event_usernameButtonMouseExited

    private void addUserButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserButtonMouseEntered
        addUserButton.setContentAreaFilled(true);
    }//GEN-LAST:event_addUserButtonMouseEntered

    private void addUserButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserButtonMouseExited
        addUserButton.setContentAreaFilled(false);
    }//GEN-LAST:event_addUserButtonMouseExited

    private void infoButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoButtonMouseEntered
        infoButton.setContentAreaFilled(true);
    }//GEN-LAST:event_infoButtonMouseEntered

    private void infoButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoButtonMouseExited
        infoButton.setContentAreaFilled(false);
    }//GEN-LAST:event_infoButtonMouseExited

    private void settingsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsButtonMouseEntered
        settingsButton.setContentAreaFilled(true);
    }//GEN-LAST:event_settingsButtonMouseEntered

    private void settingsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsButtonMouseExited
        settingsButton.setContentAreaFilled(false);
    }//GEN-LAST:event_settingsButtonMouseExited

    private void statusButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusButtonMouseEntered
        if (statusButton.isEnabled()) {
            statusButton.setContentAreaFilled(true);
        }
    }//GEN-LAST:event_statusButtonMouseEntered

    private void statusButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusButtonMouseExited
        statusButton.setContentAreaFilled(false);
    }//GEN-LAST:event_statusButtonMouseExited

    private void statusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusButtonActionPerformed
        getController().toggleConnectionStatus();
    }//GEN-LAST:event_statusButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUserButton;
    private javax.swing.JButton avatarButton;
    javax.swing.JList contactList;
    private javax.swing.JScrollPane contactListScrollPane;
    javax.swing.JButton infoButton;
    javax.swing.JButton settingsButton;
    javax.swing.JButton statusButton;
    private javax.swing.JPanel topPanel;
    private javax.swing.Box.Filler topPanelHorizontalFiller;
    javax.swing.JButton usernameButton;
    // End of variables declaration//GEN-END:variables
}
